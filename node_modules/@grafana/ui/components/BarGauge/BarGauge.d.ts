import React, { PureComponent, CSSProperties, ReactNode } from 'react';
import { DisplayValue, Themeable, TimeSeriesValue, Threshold, VizOrientation } from '../../types';
export interface Props extends Themeable {
    height: number;
    width: number;
    thresholds: Threshold[];
    value: DisplayValue;
    maxValue: number;
    minValue: number;
    orientation: VizOrientation;
    itemSpacing?: number;
    displayMode: 'basic' | 'lcd' | 'gradient';
}
export declare class BarGauge extends PureComponent<Props> {
    static defaultProps: Partial<Props>;
    render(): {} | null | undefined;
    renderBarAndValue(): React.ReactNode;
    renderBasicAndGradientBars(): ReactNode;
    getCellColor(positionValue: TimeSeriesValue): CellColors;
    renderRetroBars(): ReactNode;
}
interface CellColors {
    background: string;
    backgroundShade?: string;
    border: string;
    isLit?: boolean;
}
export declare function getTitleStyles(props: Props): {
    wrapper: CSSProperties;
    title: CSSProperties;
};
interface BasicAndGradientStyles {
    wrapper: CSSProperties;
    bar: CSSProperties;
    value: CSSProperties;
}
/**
 * Only exported to for unit test
 */
export declare function getBasicAndGradientStyles(props: Props): BasicAndGradientStyles;
/**
 * Only exported to for unit test
 */
export declare function getBarGradient(props: Props, maxSize: number): string;
/**
 * Only exported to for unit test
 */
export declare function getValueColor(props: Props): string;
export {};
