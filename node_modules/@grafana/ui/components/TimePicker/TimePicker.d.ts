import { PureComponent } from 'react';
import { Props as TimePickerPopoverProps } from './TimePickerPopover';
import { PopperContent } from '../Tooltip/PopperController';
import { Timezone } from '../../utils/datemath';
import { TimeRange, TimeOption, TimeOptions } from '../../types/time';
import { SelectOptionItem } from '../Select/Select';
export interface Props {
    value: TimeRange;
    isTimezoneUtc: boolean;
    popoverOptions: TimeOptions;
    selectOptions: TimeOption[];
    timezone?: Timezone;
    onChange: (timeRange: TimeRange) => void;
    onMoveBackward: () => void;
    onMoveForward: () => void;
    onZoom: () => void;
    tooltipContent?: PopperContent<any>;
}
export interface State {
    isMenuOpen: boolean;
}
export declare class TimePicker extends PureComponent<Props, State> {
    static defaultSelectOptions: {
        from: string;
        to: string;
        display: string;
        section: number;
        active: boolean;
    }[];
    static defaultPopoverOptions: {
        '0': {
            from: string;
            to: string;
            display: string;
            section: number;
            active: boolean;
        }[];
        '1': {
            from: string;
            to: string;
            display: string;
            section: number;
            active: boolean;
        }[];
        '2': {
            from: string;
            to: string;
            display: string;
            section: number;
            active: boolean;
        }[];
    };
    state: State;
    mapTimeOptionsToSelectOptionItems: (selectOptions: TimeOption[]) => {
        label: string;
        expanded: boolean;
        options: {
            label: string;
            value: TimeOption;
        }[];
        onPopoverOpen: () => undefined;
        onPopoverClose: (timeRange: TimeRange) => void;
        popoverProps: TimePickerPopoverProps;
    }[];
    onSelectChanged: (item: SelectOptionItem<TimeOption>) => void;
    onChangeMenuOpenState: (isOpen: boolean) => void;
    onOpenMenu: () => void;
    onCloseMenu: () => void;
    onPopoverClose: (timeRange: TimeRange) => void;
    render(): JSX.Element;
}
